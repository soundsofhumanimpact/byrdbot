{"remainingRequest":"/Users/aletheia/Desktop/voiceapp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/aletheia/Desktop/voiceapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/voiceapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/voiceapp/src/components/SoundsOfImpact.vue?vue&type=template&id=6fde6911&scoped=true&","dependencies":[{"path":"/Users/aletheia/Desktop/voiceapp/src/components/SoundsOfImpact.vue","mtime":1597865256000},{"path":"/Users/aletheia/Desktop/voiceapp/node_modules/cache-loader/dist/cjs.js","mtime":1597852831000},{"path":"/Users/aletheia/Desktop/voiceapp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1597852857000},{"path":"/Users/aletheia/Desktop/voiceapp/node_modules/cache-loader/dist/cjs.js","mtime":1597852831000},{"path":"/Users/aletheia/Desktop/voiceapp/node_modules/vue-loader/lib/index.js","mtime":1597852857000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}