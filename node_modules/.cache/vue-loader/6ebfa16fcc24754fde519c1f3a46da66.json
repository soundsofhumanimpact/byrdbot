{"remainingRequest":"/Users/milescoleman/Desktop/byrdbot/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/milescoleman/Desktop/byrdbot/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/milescoleman/Desktop/byrdbot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/milescoleman/Desktop/byrdbot/src/components/SoundsOfImpact.vue?vue&type=template&id=6fde6911&scoped=true&","dependencies":[{"path":"/Users/milescoleman/Desktop/byrdbot/src/components/SoundsOfImpact.vue","mtime":1717769866614},{"path":"/Users/milescoleman/Desktop/byrdbot/node_modules/cache-loader/dist/cjs.js","mtime":1717769865317},{"path":"/Users/milescoleman/Desktop/byrdbot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1717769866469},{"path":"/Users/milescoleman/Desktop/byrdbot/node_modules/cache-loader/dist/cjs.js","mtime":1717769865317},{"path":"/Users/milescoleman/Desktop/byrdbot/node_modules/vue-loader/lib/index.js","mtime":1717769866468}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}